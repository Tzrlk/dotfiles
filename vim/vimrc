
colorscheme torte

" Save your backups to a less annoying place than the current directory.
" If you have .vim-backup in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/backup or . if all else fails.
if isdirectory($HOME . '/.vim/backup') == 0
	:silent !mkdir -p ~/vimfiles/backup >/dev/null 2>&1
endif

set backupdir-=.
set backupdir+=.
set backupdir-=~/
set backupdir^=~/vimfiles/backup/
set backupdir^=./.vim-backup/
set backup

" Save your swp files to a less annoying place than the current directory.
" If you have .vim-swap in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/swap, ~/tmp or .
if isdirectory($HOME . '/.vim/swap') == 0
	:silent !mkdir -p ~/vimfiles/swap >/dev/null 2>&1
endif

set directory=./.vim-swap//
set directory+=~/vimfiles/swap//
set directory+=~/tmp//
set directory+=.

" viminfo stores the the state of your previous editing session
set viminfo+=n~/vimfiles/viminfo

if exists("+undofile")
	" undofile - This allows you to use undos after exiting and restarting
	" This, like swap and backups, uses .vim-undo first, then ~/.vim/undo
	" :help undo-persistence
	" This is only present in 7.3+
	if isdirectory($HOME . '/.vim/undo') == 0
		:silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
	endif

	set undodir=./.vim-undo//
	set undodir+=~/vimfiles/undo//
	set undofile
endif

" Set line endings
set fileformat=unix

" Set character encoding
set encoding=utf-8
set fileencoding=utf-8

" Setting the font.
set guifont=Lucida_Console:h10

" Adding a column size
set colorcolumn=120

" Managing tab size
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Backspace functionality
set backspace=indent,eol,start

" Showing whitespace
set list
set listchars=tab:│\ ,trail:¬

" Showing line numbers
set number

execute pathogen#infect()

syntax on
filetype plugin indent on

